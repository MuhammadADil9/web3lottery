



cheat code for making the address = makeaddr
function for checking the equality = assert 
requirement of assinging money to the duplicated user = vm.deal(player, amount)

how test cases are aligned within the contract that is 
> arrange 
> act 
> assert


for making a specific address responsible for taking on the current call we use = vm.prank()

      
for checking the event >   vm.expectEmit(topic, topic, topic, unindexed, address(contract address)); 
cheat code for setting the time that is vm.warp(argument)
cheat code for setting a specific block number vm.roll(argument)

cheat code for starting serires of transaction from same address is by vm.startprank() and must be ended by vm.stoprank()

in order to convert a string into number we can try this vm.toString()

-------------------------------------------------------------------------------------------------------
  
test ideas for the first function 

function for entering into raffle 

constraints 

there must be minimum balance 
state must be opened 

effects 
first index of array will be filled 
a event will be emitted. 

how many possible test cases can be there ? 
1) everything is correct  Done
2) everything is wrong that is ( there is no balance, no state is opened so no array index was updated) Done
3) balance was there but state was not opened   Done
4) balance wasn't there but state was opened    Done
5) balance and state were all good and it should revert for array not letting the person in. 



--------------
test cases for event in context of enterrafle function 

1 ) events emit itself when the function goes well. Done
2 ) is there any way that we can test that event does not occur. Nope there is no specific way of doing so.



-------------------------------

making sure that no one enters into the contract when the state if closed 
this will only happen when perform up keep will trigger itself.
