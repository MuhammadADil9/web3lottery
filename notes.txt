if we create struct of our own, will we be able to pass it down in cordinator function ?  nope it will not accept any 
other struct then defined in the parameters

who is inheriting what and how is that happening ? internal means this and any contract inherting from the contract and not outsider

revert with or not with any array


override & virtual

revert("The function call doesn't exist")
revert error(one,two,three)
























cordinator address 
0x9DdfaCa8183c41ad55329BdeeD9F6A8d53168B1B
keyhash 
0x787d74caea10b2b357790d5b5247c2f63d1d91572a9846f780606e4d953677ae
link token = 0x779877A7B0D9E8603169DdbD7836e478b4624789























where do we use broadcasting ? 

now this is the time to fund the subscription ID


for getting up a local subscription id we had to deploy the mockcordinatorV3 contract locally and then call it for getting the subscription ID. 
now in order to fund that specific local subscription ID we need 
=> vrf address
=> sub ID
=> link token address 

which we will be deploying locally on our chain.


> if we didn't return the helperconfig contract from run function function of deployment, were we not able to use the same parameters during the test ?


>For creating a subscription we need [ CREATE SUBSCRIPTION ]

> For funding through on chain

//how to listen for the evetns 
//how to impose the logic based on listening the evetns













